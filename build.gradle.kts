/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
  `java-platform`
  `maven-publish`
}

defaultTasks("publishKnotxPublicationToMavenLocal")

tasks {
  getByName("build").dependsOn("publishKnotxPublicationToMavenLocal")
}

repositories {
  jcenter()
  mavenLocal()
  maven(url = "https://oss.sonatype.org/content/repositories/snapshots")
  maven(url = "http://repo.maven.apache.org/maven2")
}

group = "io.knotx"
version = "2.1.1-SNAPSHOT"
description = "Knot.x Dependencies - Knot.x components and required dependencies versions"

javaPlatform {
  allowDependencies()
}

buildscript {
  extra.apply {
    set("vertx.stack.version", "3.8.4")
    set("commons-io.version", "2.6")
    set("commons-lang3.version", "3.9")
    set("commons-collections4.version", "4.2")
    set("guava.version", "27.1-jre")
    set("logback-classic.version", "1.2.3")
    set("typesafe.version", "1.3.3")
    set("junit5.version", "5.4.1")
    set("junit5-surefire.version", "1.4.1")
    set("assertj.version", "3.11.1")
    set("mockito2.version", "2.22.0")
    set("system-rules.version", "1.16.1")
    set("wiremock.version", "2.18.0")
    set("free-port-finder.version", "1.1.1")
    set("maven.nexus.staging.plugin.version", "1.6.7")
    set("maven.gpg.plugin.version", "1.5")
  }
}

dependencies {
  constraints {
    api("io.vertx:vertx-rx-java2-gen:${ext("vertx.stack.version")}")
    api("ch.qos.logback:logback-classic:${ext("logback-classic.version")}")
    api("com.google.guava:guava:${ext("guava.version")}")
    api("org.apache.commons:commons-lang3:${ext("commons-lang3.version")}")
    api("org.apache.commons:commons-collections4:${ext("commons-collections4.version")}")
    api("commons-io:commons-io:${ext("commons-io.version")}")
    api("com.typesafe:config:${ext("typesafe.version")}")

    api("org.mockito:mockito-core:${ext("mockito2.version")}")
    api("org.mockito:mockito-junit-jupiter:${ext("mockito2.version")}")
    api("com.github.tomakehurst:wiremock:${ext("wiremock.version")}")
    api("org.junit.platform:junit-platform-surefire-provider:${ext("junit5-surefire.version")}")
    api("me.alexpanov:free-port-finder:${ext("free-port-finder.version")}")
    api("org.assertj:assertj-core:${ext("assertj.version")}")
  }
  api(platform("io.vertx:vertx-dependencies:${ext("vertx.stack.version")}"))
  api(platform("org.junit:junit-bom:${ext("junit5.version")}"))
  api("com.github.stefanbirkner:system-rules:${ext("system-rules.version")}") {
    exclude(group = "junit", module = "junit-dep")
  }
}

publishing {
  publications {
    create<MavenPublication>("Knotx") {

      pom {
        name.set(project.description)
        description.set("Knot.x stack dependencies POM")
        url.set("http://knotx.io")
        packaging = "pom"

        inceptionYear.set("2016")

        licenses {
          license {
            name.set("The Apache Software License, Version 2.0")
            url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
            distribution.set("repo")
          }
        }

        developers {
          developer {
            name.set("Tomasz Michalak")
            url.set("https://github.com/tomaszmichalak")
          }
          developer {
            name.set("Maciej Laskowski")
            url.set("https://github.com/Skejven")
          }
          developer {
            name.set("Marcin Czeczko")
            url.set("https://github.com/marcinczeczko")
          }
        }

        scm {
          connection.set("scm:git:git://github.com/Knotx/knotx-dependencies.git")
          developerConnection.set("scm:git:ssh://github.com:Knotx/knotx-dependencies.git")
          url.set("http://github.com/Knotx/knotx-dependencies/tree/master")
          tag.set("HEAD")
        }

        withXml {
          asNode().apply {
            appendNode("distributionManagement")
                .apply {
                  appendNode("snapshotRepository")
                      .apply {
                        appendNode("id", "ossrh")
                        appendNode("url", "https://oss.sonatype.org/content/repositories/snapshots")
                      }
                  appendNode("repository")
                      .apply {
                        appendNode("id", "ossrh")
                        appendNode("url", "https://oss.sonatype.org/content/repositories/snapshots")
                      }
                }

            appendNode("repositories")
                .apply {
                  appendNode("repository")
                      .apply {
                        appendNode("id", "sonatype-nexus-snapshots")
                        appendNode("name", "Sonatype Nexus Snapshots")
                        appendNode("url", "https://oss.sonatype.org/content/repositories/snapshots")
                        appendNode("releases")
                            .appendNode("enabled", "false")
                        appendNode("snapshots")
                            .appendNode("enabled", "true")
                      }
                }
          }
        }
      }

      from(components["javaPlatform"])
    }
  }
}

fun ext(id: String): String = project.extra[id] as String
